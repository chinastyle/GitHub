// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConnectClientReq.proto

package com.aspire.mose.protocol.handshake;

public final class MsgConnectClientReq {
  private MsgConnectClientReq() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ConnectClientReqOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string SessionId = 1;
    boolean hasSessionId();
    String getSessionId();
    
    // required bool IsEncrypt = 2;
    boolean hasIsEncrypt();
    boolean getIsEncrypt();
    
    // required bool IsNeedServCert = 3;
    boolean hasIsNeedServCert();
    boolean getIsNeedServCert();
    
    // required uint32 SemCrypMethods = 4;
    boolean hasSemCrypMethods();
    int getSemCrypMethods();
    
    // required uint32 AsemCrypMethods = 5;
    boolean hasAsemCrypMethods();
    int getAsemCrypMethods();
    
    // required uint32 DigestMethods = 6;
    boolean hasDigestMethods();
    int getDigestMethods();
    
    // required string MoseVersion = 7;
    boolean hasMoseVersion();
    String getMoseVersion();
  }
  public static final class ConnectClientReq extends
      com.google.protobuf.GeneratedMessageLite
      implements ConnectClientReqOrBuilder {
    // Use ConnectClientReq.newBuilder() to construct.
    private ConnectClientReq(Builder builder) {
      super(builder);
    }
    private ConnectClientReq(boolean noInit) {}
    
    private static final ConnectClientReq defaultInstance;
    public static ConnectClientReq getDefaultInstance() {
      return defaultInstance;
    }
    
    public ConnectClientReq getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string SessionId = 1;
    public static final int SESSIONID_FIELD_NUMBER = 1;
    private java.lang.Object sessionId_;
    public boolean hasSessionId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getSessionId() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          sessionId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSessionIdBytes() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required bool IsEncrypt = 2;
    public static final int ISENCRYPT_FIELD_NUMBER = 2;
    private boolean isEncrypt_;
    public boolean hasIsEncrypt() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getIsEncrypt() {
      return isEncrypt_;
    }
    
    // required bool IsNeedServCert = 3;
    public static final int ISNEEDSERVCERT_FIELD_NUMBER = 3;
    private boolean isNeedServCert_;
    public boolean hasIsNeedServCert() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getIsNeedServCert() {
      return isNeedServCert_;
    }
    
    // required uint32 SemCrypMethods = 4;
    public static final int SEMCRYPMETHODS_FIELD_NUMBER = 4;
    private int semCrypMethods_;
    public boolean hasSemCrypMethods() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getSemCrypMethods() {
      return semCrypMethods_;
    }
    
    // required uint32 AsemCrypMethods = 5;
    public static final int ASEMCRYPMETHODS_FIELD_NUMBER = 5;
    private int asemCrypMethods_;
    public boolean hasAsemCrypMethods() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getAsemCrypMethods() {
      return asemCrypMethods_;
    }
    
    // required uint32 DigestMethods = 6;
    public static final int DIGESTMETHODS_FIELD_NUMBER = 6;
    private int digestMethods_;
    public boolean hasDigestMethods() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getDigestMethods() {
      return digestMethods_;
    }
    
    // required string MoseVersion = 7;
    public static final int MOSEVERSION_FIELD_NUMBER = 7;
    private java.lang.Object moseVersion_;
    public boolean hasMoseVersion() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getMoseVersion() {
      java.lang.Object ref = moseVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          moseVersion_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMoseVersionBytes() {
      java.lang.Object ref = moseVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        moseVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      sessionId_ = "";
      isEncrypt_ = false;
      isNeedServCert_ = false;
      semCrypMethods_ = 0;
      asemCrypMethods_ = 0;
      digestMethods_ = 0;
      moseVersion_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsEncrypt()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsNeedServCert()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSemCrypMethods()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAsemCrypMethods()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDigestMethods()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMoseVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSessionIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isEncrypt_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isNeedServCert_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, semCrypMethods_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, asemCrypMethods_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, digestMethods_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getMoseVersionBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSessionIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isEncrypt_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isNeedServCert_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, semCrypMethods_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, asemCrypMethods_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, digestMethods_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getMoseVersionBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq, Builder>
        implements com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReqOrBuilder {
      // Construct using com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        sessionId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        isEncrypt_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        isNeedServCert_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        semCrypMethods_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        asemCrypMethods_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        digestMethods_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        moseVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq getDefaultInstanceForType() {
        return com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq.getDefaultInstance();
      }
      
      public com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq build() {
        com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq buildPartial() {
        com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq result = new com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sessionId_ = sessionId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isEncrypt_ = isEncrypt_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isNeedServCert_ = isNeedServCert_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.semCrypMethods_ = semCrypMethods_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.asemCrypMethods_ = asemCrypMethods_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.digestMethods_ = digestMethods_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.moseVersion_ = moseVersion_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq other) {
        if (other == com.aspire.mose.protocol.handshake.MsgConnectClientReq.ConnectClientReq.getDefaultInstance()) return this;
        if (other.hasSessionId()) {
          setSessionId(other.getSessionId());
        }
        if (other.hasIsEncrypt()) {
          setIsEncrypt(other.getIsEncrypt());
        }
        if (other.hasIsNeedServCert()) {
          setIsNeedServCert(other.getIsNeedServCert());
        }
        if (other.hasSemCrypMethods()) {
          setSemCrypMethods(other.getSemCrypMethods());
        }
        if (other.hasAsemCrypMethods()) {
          setAsemCrypMethods(other.getAsemCrypMethods());
        }
        if (other.hasDigestMethods()) {
          setDigestMethods(other.getDigestMethods());
        }
        if (other.hasMoseVersion()) {
          setMoseVersion(other.getMoseVersion());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSessionId()) {
          
          return false;
        }
        if (!hasIsEncrypt()) {
          
          return false;
        }
        if (!hasIsNeedServCert()) {
          
          return false;
        }
        if (!hasSemCrypMethods()) {
          
          return false;
        }
        if (!hasAsemCrypMethods()) {
          
          return false;
        }
        if (!hasDigestMethods()) {
          
          return false;
        }
        if (!hasMoseVersion()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              sessionId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isEncrypt_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isNeedServCert_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              semCrypMethods_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              asemCrypMethods_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              digestMethods_ = input.readUInt32();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              moseVersion_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string SessionId = 1;
      private java.lang.Object sessionId_ = "";
      public boolean hasSessionId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getSessionId() {
        java.lang.Object ref = sessionId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          sessionId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSessionId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sessionId_ = value;
        
        return this;
      }
      public Builder clearSessionId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sessionId_ = getDefaultInstance().getSessionId();
        
        return this;
      }
      void setSessionId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        sessionId_ = value;
        
      }
      
      // required bool IsEncrypt = 2;
      private boolean isEncrypt_ ;
      public boolean hasIsEncrypt() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getIsEncrypt() {
        return isEncrypt_;
      }
      public Builder setIsEncrypt(boolean value) {
        bitField0_ |= 0x00000002;
        isEncrypt_ = value;
        
        return this;
      }
      public Builder clearIsEncrypt() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isEncrypt_ = false;
        
        return this;
      }
      
      // required bool IsNeedServCert = 3;
      private boolean isNeedServCert_ ;
      public boolean hasIsNeedServCert() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getIsNeedServCert() {
        return isNeedServCert_;
      }
      public Builder setIsNeedServCert(boolean value) {
        bitField0_ |= 0x00000004;
        isNeedServCert_ = value;
        
        return this;
      }
      public Builder clearIsNeedServCert() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isNeedServCert_ = false;
        
        return this;
      }
      
      // required uint32 SemCrypMethods = 4;
      private int semCrypMethods_ ;
      public boolean hasSemCrypMethods() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getSemCrypMethods() {
        return semCrypMethods_;
      }
      public Builder setSemCrypMethods(int value) {
        bitField0_ |= 0x00000008;
        semCrypMethods_ = value;
        
        return this;
      }
      public Builder clearSemCrypMethods() {
        bitField0_ = (bitField0_ & ~0x00000008);
        semCrypMethods_ = 0;
        
        return this;
      }
      
      // required uint32 AsemCrypMethods = 5;
      private int asemCrypMethods_ ;
      public boolean hasAsemCrypMethods() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getAsemCrypMethods() {
        return asemCrypMethods_;
      }
      public Builder setAsemCrypMethods(int value) {
        bitField0_ |= 0x00000010;
        asemCrypMethods_ = value;
        
        return this;
      }
      public Builder clearAsemCrypMethods() {
        bitField0_ = (bitField0_ & ~0x00000010);
        asemCrypMethods_ = 0;
        
        return this;
      }
      
      // required uint32 DigestMethods = 6;
      private int digestMethods_ ;
      public boolean hasDigestMethods() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getDigestMethods() {
        return digestMethods_;
      }
      public Builder setDigestMethods(int value) {
        bitField0_ |= 0x00000020;
        digestMethods_ = value;
        
        return this;
      }
      public Builder clearDigestMethods() {
        bitField0_ = (bitField0_ & ~0x00000020);
        digestMethods_ = 0;
        
        return this;
      }
      
      // required string MoseVersion = 7;
      private java.lang.Object moseVersion_ = "";
      public boolean hasMoseVersion() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getMoseVersion() {
        java.lang.Object ref = moseVersion_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          moseVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMoseVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        moseVersion_ = value;
        
        return this;
      }
      public Builder clearMoseVersion() {
        bitField0_ = (bitField0_ & ~0x00000040);
        moseVersion_ = getDefaultInstance().getMoseVersion();
        
        return this;
      }
      void setMoseVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        moseVersion_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:protocol.ConnectClientReq)
    }
    
    static {
      defaultInstance = new ConnectClientReq(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:protocol.ConnectClientReq)
  }
  
  
  static {
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
